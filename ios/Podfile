require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

# platform :ios, min_ios_version_supported
platform :ios, '12.4'


prepare_react_native_project!
# :hermes_enabled => false

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'makfydriver' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => false, 
    # //flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )
# React Native Maps dependencies
# The following line is only needed if building on an Apple silicon Mac without rosetta.
 # react-native-maps dependencies
 pod 'react-native-maps', path: '../node_modules/react-native-maps'
#  pod 'react-native-google-maps', path: '../node_modules/react-native-maps'
 pod 'GoogleMaps'
#  pod 'Google-Maps-iOS-Utils', :git => 'https://github.com/Simon-TechForm/google-maps-ios-utils.git', :branch => 'feat/support-apple-silicon'

#  pod 'Google-Maps-iOS-Utils'


# rn_maps_path = '../node_modules/react-native-maps'
# pod 'react-native-google-maps', :path => rn_maps_path

# Use the following line to use App Center Analytics and Crashes.x
pod 'AppCenter'

# Use the following lines if you want to specify which service you want to use.
pod 'AppCenter/Analytics'
pod 'AppCenter/Crashes'
pod 'AppCenter/Distribute'
pod 'Firebase', :modular_headers => true
pod 'FirebaseCoreInternal', :modular_headers => true
pod 'GoogleUtilities', :modular_headers => true
pod 'FirebaseCore', :modular_headers => true
pod 'RNReanimated', :path => '../node_modules/react-native-reanimated'

$RNFirebaseAsStaticFramework=true
#....add any library need headers
  target 'makfydriverTests' do
    inherit! :complete
    # Pods for testing
  end
  
  # use_flipper!()

  post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    # NOTE: Change IPHONEOS_DEPLOYMENT_TARGET to 12.4.
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
      end
      installer.pods_project.build_configurations.each do |config|  
       config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"     
      end
    end
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end
